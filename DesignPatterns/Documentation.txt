	Този проект е за игри. "Създаване на игри", Блог (в който можеш да коментираш дадена игра и ти показва историята, какво си играл) и последното е за група, в която могат да се присъединяват хора.
	Шаблон за създаване на обект:
		- Използвала съм Factory pattern. Започва се с един интерфейс IPlay, където има метод Play(). След това съм създала 3 класа (Minecraft, AssassinsCreed и Outlast), които наследяват IPlay, декларират се класовете и след това е описан какво да прави метода, в случая е да изкарва съобщение. Тук се появава и Factory класа, в който има switch-case. Ако има зададен правилно ключ, ще извика класа, които носи името му, а ако не - излиза Exception, че ключа не е валиден. А във Main метода - си създаваме обектите и после викаме метода Play().
	Структурни шаблони:
		- Използвано е Bridge и Proxy patterns. Започва се с един интерфейс IBridge, където има метод Add(string message). След това се създава клас Portal, където се декларират класа и bridge, след това е описан какво да прави метода, в случая е да добавя съобщение. Създава се клас BlogSystem, където има частен клас Blog, защото там се създава лист, булев метод (проверява дали имената са еднакви), декларация на класа и за добавяне на съобщенията. Също в класа BlogSystem има друг клас, който е публичен (MyBlog), където участва и Proxy шаблона.  Има метод за регистрация, дали си успял да влезеш в профила, за добавяне на съобщение, за проверяване дали има нещо празно. Друг клас MyOpenBlog, който наследява интерфейса IBridge. А във Main метода - си създаваме и после викаме методи.
	Поведенчески шаблон:
		- Има клас Mediator, където има методи за влизане, блокиране, отблокиране, изпращане на съобщение. Има други два класа (JoinGameGroup1 и JoinGameGroup2 (наследява JoinGameGroup1)), JoinGameGroup1 - деклариране и методи за получаване на съобщение и изпращане, а JoinGameGroup2 override-ване на получените съобщения. А във Main метода - си създаваме и после викаме методи.